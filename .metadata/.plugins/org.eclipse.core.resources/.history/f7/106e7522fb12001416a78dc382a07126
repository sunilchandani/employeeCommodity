package com.sunil.rest;

import java.io.IOException;
import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.GenericEntity;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.codehaus.jackson.JsonParseException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;

import com.sun.jersey.api.client.GenericType;
import com.sunil.DAO.EmployeeDAO;
import com.sunil.Entities.Employee;

@Path("/json/employee")
public class JSONService {
	@GET
	@Path("/get")
	@Produces(MediaType.APPLICATION_JSON)
	public Response getEmployeeInJSON() {
		
		Employee emp = new Employee(1,"Sunil","BCA",23,"Alwar");
		return Response.status(200).entity(emp).build();
	
	}
	
	@POST
	@Path("/post")
	@Consumes(MediaType.APPLICATION_JSON)
	public Response getEmployeeInJSONPost(Employee employee) {
		return Response.status(201).entity(employee).build(); 
	}
	
	@GET
	@Path("/getEmp")
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	public Response getEmployee() {
		List<Employee> empList = EmployeeDAO.getEmployee();
		GenericEntity<List<Employee>> genericEntity = new GenericEntity<List<Employee>>(empList){};
		Response response=null;
		try {
			response = Response.status(201).entity(genericEntity).build();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return response;
	}
//
//	@POST
//	@Path("/postEmp")
//	@Consumes(MediaType.APPLICATION_JSON)
//	public Response postEmployee(Employee employee) {
//		EmployeeDAO.storeEmployee(employee);
//		//GenericEntity<List<Employee>> genericEntity = new GenericEntity<List<Employee>>(empList){};
//		return Response.status(201).entity("Employee Details added.").build();
//	}

	@POST
	@Path("/postEmp")
	@Consumes(MediaType.APPLICATION_JSON)
	public Response postEmployee(String jsonStr) {
		ObjectMapper objM = new ObjectMapper();
		Employee emp;
		try {
			emp = (Employee)objM.readValue(jsonStr, Employee.class);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	@POST
	@Path("/postMultiEmp")
	@Consumes(MediaType.APPLICATION_JSON)
	public Response postMultipleEmployee(List<Employee> empList) {
		boolean b = EmployeeDAO.storeEmployee(empList);
		if(b) return Response.status(201).entity("Employee Details added.").build();
		else return Response.status(201).entity("Invalid Employee Details/Employee ID already exists.").build();
	}
}
