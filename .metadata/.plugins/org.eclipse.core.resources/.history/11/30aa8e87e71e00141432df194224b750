package com.sunil.common;

import java.util.Date;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;

import com.sunil.Client.CommodityClient;
import com.sunil.Entities.Commodity;

/**
 * 
 * @author Sunil Kumar
 * Managed bean class for Commodity entity having request scope
 * 
 */
@ManagedBean
@RequestScoped
public class CommodityBean {
	private Long id;
	private String name;
	private Double price;
	private String type;
	private Date expiryDate;

	private List<Commodity> commodityList;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Double getPrice() {
		return price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public Date getExpiryDate() {
		return expiryDate;
	}

	public void setExpiryDate(Date expiryDate) {
		this.expiryDate = expiryDate;
	}

	public List<Commodity> getCommodityList() {
		return commodityList;
	}

	public void setEmpList(List<Commodity> commodityList) {
		this.commodityList = commodityList;
	}

	public CommodityBean() {
		super();
	}

	public CommodityBean(Long id, String name, Double price, String type,
			Date expiryDate) {
		super();
		this.id = id;
		this.name = name;
		this.price = price;
		this.type = type;
		this.expiryDate = expiryDate;
	}

	@Override
	public String toString() {
		return "CommodityBean [id=" + id + ", name=" + name + ", price="
				+ price + ", type=" + type + ", expiryDate=" + expiryDate
				+ ", commodityList=" + commodityList + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((commodityList == null) ? 0 : commodityList.hashCode());
		result = prime * result
				+ ((expiryDate == null) ? 0 : expiryDate.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((price == null) ? 0 : price.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CommodityBean other = (CommodityBean) obj;
		if (commodityList == null) {
			if (other.commodityList != null)
				return false;
		} else if (!commodityList.equals(other.commodityList))
			return false;
		if (expiryDate == null) {
			if (other.expiryDate != null)
				return false;
		} else if (!expiryDate.equals(other.expiryDate))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (price == null) {
			if (other.price != null)
				return false;
		} else if (!price.equals(other.price))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		return true;
	}

	/**
	 * Resets all the attribute of commodity bean class.
	 */
	public void reset(ActionEvent event) {
		this.id = null;
		this.name = null;
		this.price = null;
		this.type = null;
		this.expiryDate = null;

		this.commodityList = null;
	}
	
	public void storeCommodity() {
		Commodity commodity = new Commodity(this.id, this.name, this.price,
				this.type, this.expiryDate);
		if (CommodityClient.storeCommodity(commodity)) {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO, "Success",
							"Added Commodity Details"));
		} else {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error",
							""));
		}
	}

	public void getCommodityById() {
		Commodity commodity = CommodityClient.getCommodity(this.id);
		if(commodity == null) {
			this.name = null;
			this.price = null;
			this.type = null;
			this.expiryDate = null;
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR, "Success",
							""));
		} else {
			this.name = commodity.getName();
			this.price = commodity.getPrice();
			this.type = commodity.getType();
			this.expiryDate = commodity.getExpiryDate();
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO, "Success",
							""));
		}
	}

	public void getCommodityByName() {
		List<Commodity> commodities = CommodityClient.getCommodity(this.name);
		this.commodityList = commodities;
		if(commodities == null ) {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error",""));
		} else if(commodities.isEmpty()) {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO, "Success","No Results."));
		} else {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO, "Success",""));
		}
	}

	public void getCommodity() {
		List<Commodity> commodities = CommodityClient.getCommodity();
		this.commodityList = commodities;
		if(commodities == null ) {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error",""));
		} else if(commodities.isEmpty()) {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO, "Success","There is no commodity."));
		} else {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO, "Success",""));
		}
	}

	public void updateCommodity() {
		Commodity commodity = new Commodity(this.id, this.name, this.price,
				this.type, this.expiryDate);
		if (CommodityClient.updateCommodity(commodity)) {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO, "Success",
							"Updated Commodity Details"));
		} else {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error",
							"No commodity exists for this ID."));
		}
	}

	public void deleteCommodity() {
		if (CommodityClient.deleteCommodity(this.id)) {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO, "Success",
							"Deleted Commodity Details"));
		} else {
			FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error",
							"No commodity exists for ID."));
		}
	}
}