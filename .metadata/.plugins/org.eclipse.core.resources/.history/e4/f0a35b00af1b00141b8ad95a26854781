package com.sunil.DAO;

import java.util.List;

import javax.jdo.JDOHelper;
import javax.jdo.PersistenceManager;
import javax.jdo.PersistenceManagerFactory;
import javax.jdo.Transaction;

import com.sunil.Entities.Employee;
import com.sunil.entities.Commodity;

public class CommodityDAO {
	private	static PersistenceManagerFactory pmf = JDOHelper.getPersistenceManagerFactory("datanucleus.properties");
	
	/**
	 * @author sunil kumar
	 * 
	 * Stores Commodity details in the database. Return values indicates that the details are added or not.
	 * 
	 * @param commodity:Commodity
	 * @return boolean
	 * 
	 */
	public static boolean storeCommodity(Commodity commodity) {
		PersistenceManager pm = pmf.getPersistenceManager();
		Transaction transaction = pm.currentTransaction();
		boolean transactionStatus = false ;
		
		try {
			transaction.begin();
			pm.makePersistent(commodity);
			transaction.commit();
		}
		catch(Exception e) {
			System.out.println("Exception: " + e.getMessage());
			transaction.rollback();
			pm.close();
			return transactionStatus;
		} 
		finally {
			if(transaction.isActive()) {
				transaction.rollback();
			} 
			else {
				transactionStatus = true;
			}
			pm.close();
		}
		return transactionStatus;
	}
	
	/**
	 * @author sunil kumar
	 * 
	 * Stores list of commodities details in the database. Return values indicates that the details are added or not.
	 * 
	 * @param commodityList : List<Commodity>
	 * @return boolean
	 * 
	 */
	public static boolean storeCommodity(List<Commodity> commodityList) {
		PersistenceManager pm = pmf.getPersistenceManager();
		Transaction transaction = pm.currentTransaction();
		boolean transactionStatus = false ;
		
		try {
			transaction.begin();
			pm.makePersistentAll(commodityList);
			transaction.commit();
		}
		catch(Exception e) {
			System.out.println("Exception: " + e.getMessage());
			transaction.rollback();
			pm.close();
			return transactionStatus;
		} 
		finally {
			if(transaction.isActive()) {
				transaction.rollback();
			} 
			else {
				transactionStatus = true;
			}
			pm.close();
		}
		return transactionStatus;
	}
}
